/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BatchActions, BatchActionsInterface } from "../BatchActions";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddress",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
    ],
    name: "approveAndTransfer20Batch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "enum Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610755806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063203b0ea71461003b578063a4c79eee14610050575b600080fd5b61004e6100493660046104e0565b610063565b005b61004e61005e36600461057c565b610229565b60005b835181101561022357838181518110610081576100816106d9565b60200260200101516001600160a01b031663095ea7b38383815181106100a9576100a96106d9565b60200260200101518584815181106100c3576100c36106d9565b60200260200101516040518363ffffffff1660e01b81526004016100fc9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af115801561011b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013f91906106ef565b50838181518110610152576101526106d9565b60200260200101516001600160a01b031663a9059cbb83838151811061017a5761017a6106d9565b6020026020010151858481518110610194576101946106d9565b60200260200101516040518363ffffffff1660e01b81526004016101cd9291906001600160a01b03929092168252602082015260400190565b6020604051808303816000875af11580156101ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021091906106ef565b508061021b81610718565b915050610066565b50505050565b60005b84518110156103245760008260018111156102495761024961073f565b036102bf576000806102a7878481518110610266576102666106d9565b6020026020010151878581518110610280576102806106d9565b602002602001015187868151811061029a5761029a6106d9565b602002602001015161032b565b91509150816102b857805160208201fd5b5050610312565b6000806102fe8784815181106102d7576102d76106d9565b60200260200101518685815181106102f1576102f16106d9565b6020026020010151610363565b915091508161030f57805160208201fd5b50505b8061031c81610718565b91505061022c565b5050505050565b6000606060008084516020860187895af191503d604051602082018101604052818152816000602083013e8092505050935093915050565b60006060600080845160208601875af491503d604051602082018101604052818152816000602083013e80925050509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103d8576103d8610399565b604052919050565b600067ffffffffffffffff8211156103fa576103fa610399565b5060051b60200190565b600082601f83011261041557600080fd5b8135602061042a610425836103e0565b6103af565b82815260059290921b8401810191818101908684111561044957600080fd5b8286015b8481101561047a5780356001600160a01b038116811461046d5760008081fd5b835291830191830161044d565b509695505050505050565b600082601f83011261049657600080fd5b813560206104a6610425836103e0565b82815260059290921b840181019181810190868411156104c557600080fd5b8286015b8481101561047a57803583529183019183016104c9565b6000806000606084860312156104f557600080fd5b833567ffffffffffffffff8082111561050d57600080fd5b61051987838801610404565b9450602086013591508082111561052f57600080fd5b61053b87838801610485565b9350604086013591508082111561055157600080fd5b5061055e86828701610404565b9150509250925092565b80356002811061057757600080fd5b919050565b6000806000806080858703121561059257600080fd5b843567ffffffffffffffff808211156105aa57600080fd5b6105b688838901610404565b95506020915081870135818111156105cd57600080fd5b6105d989828a01610485565b9550506040870135818111156105ee57600080fd5b8701601f810189136105ff57600080fd5b803561060d610425826103e0565b81815260059190911b8201840190848101908b83111561062c57600080fd5b8584015b838110156106b8578035868111156106485760008081fd5b8501603f81018e1361065a5760008081fd5b878101358781111561066e5761066e610399565b610680601f8201601f19168a016103af565b8181528f60408385010111156106965760008081fd5b81604084018b83013760009181018a0191909152845250918601918601610630565b508097505050505050506106ce60608601610568565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561070157600080fd5b8151801515811461071157600080fd5b9392505050565b60006001820161073857634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052602160045260246000fd";

type BatchActionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchActionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchActions__factory extends ContractFactory {
  constructor(...args: BatchActionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BatchActions> {
    return super.deploy(overrides || {}) as Promise<BatchActions>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BatchActions {
    return super.attach(address) as BatchActions;
  }
  override connect(signer: Signer): BatchActions__factory {
    return super.connect(signer) as BatchActions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchActionsInterface {
    return new utils.Interface(_abi) as BatchActionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchActions {
    return new Contract(address, _abi, signerOrProvider) as BatchActions;
  }
}
