/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Kernel, KernelInterface } from "../Kernel";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldValidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newValidator",
        type: "address",
      },
    ],
    name: "DefaultValidatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ExecutionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_disableFlag",
        type: "bytes4",
      },
    ],
    name: "disableMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultValidator",
    outputs: [
      {
        internalType: "contract IKernelValidator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisabledMode",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "getExecution",
    outputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "address",
            name: "executor",
            type: "address",
          },
          {
            internalType: "contract IKernelValidator",
            name: "validator",
            type: "address",
          },
        ],
        internalType: "struct ExecutionDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastDisabledTime",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IKernelValidator",
        name: "_defaultValidator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IKernelValidator",
        name: "_defaultValidator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "setDefaultValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "contract IKernelValidator",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "_validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "_enableData",
        type: "bytes",
      },
    ],
    name: "setExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002a4f38038062002a4f833981016040819052620000359162000189565b604080518082018252600681526512d95c9b995b60d21b6020808301918252835180850185526005815264181718171960d91b908201529151902060e08190527fb30367effb941b728181f67f3bd24a38a4fff408ee7fb3b074425c9fb5e9be746101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818801959095526060810193909352608080840192909252308382018190528651808503909201825260c09384019096528051940193909320909252919052610120526001600160a01b038116610140528060016200012962000153565b60020180546001600160a01b0319166001600160a01b039290921691909117905550620001dd9050565b6000806200018360017f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd9620001bb565b92915050565b6000602082840312156200019c57600080fd5b81516001600160a01b0381168114620001b457600080fd5b9392505050565b818103818111156200018357634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e0516101005161012051610140516127d16200027e6000396000818161014b015281816104fa015281816106410152818161085501528181610a5701528181610b1c01528181610fe5015281816110fd01528181611252015281816113fe015261160c01526000611cee01526000611d3d01526000611d1801526000611c7101526000611c9b01526000611cc501526127d16000f3fe6080604052600436106101395760003560e01c806354fd4d50116100ab578063b0d691fe1161006f578063b0d691fe146104e8578063bc197c811461051c578063d087d2881461054b578063d1f5789414610560578063d541622114610580578063f23a6e61146105a057610140565b806354fd4d501461044157806355b14f501461047257806357b750471461049257806388e7fd06146104a7578063893d20e8146104d357610140565b806329f8b174116100fd57806329f8b174146103265780633659cfe6146103465780633a871cdd146103665780633e1b08121461039457806351166ba0146103b4578063519454471461042157610140565b806306fdde031461022c5780630b3dc3541461027457806313af4035146102a1578063150b7a02146102c15780631626ba7e1461030657610140565b3661014057005b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101bd5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e740000000060448201526064015b60405180910390fd5b600080356001600160e01b031916905060006101d76105cd565b6001600160e01b0319831660009081526003919091016020526040812054600160601b90046001600160a01b0316915036908037600080366000845af43d6000803e808015610225573d6000f35b3d6000fd5b005b34801561023857600080fd5b5061025e6040518060400160405280600681526020016512d95c9b995b60d21b81525081565b60405161026b9190611dd1565b60405180910390f35b34801561028057600080fd5b50610289610601565b6040516001600160a01b03909116815260200161026b565b3480156102ad57600080fd5b5061022a6102bc366004611e0c565b61061d565b3480156102cd57600080fd5b506102ed6102dc366004611e71565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161026b565b34801561031257600080fd5b506102ed610321366004611ee3565b61071c565b34801561033257600080fd5b5061022a610341366004611f5c565b610831565b34801561035257600080fd5b5061022a610361366004611e0c565b610a33565b34801561037257600080fd5b50610386610381366004611ff6565b610b0f565b60405190815260200161026b565b3480156103a057600080fd5b506103866103af366004612049565b610fbe565b3480156103c057600080fd5b506103d46103cf366004612072565b611058565b60408051825165ffffffffffff908116825260208085015190911690820152828201516001600160a01b03908116928201929092526060928301519091169181019190915260800161026b565b34801561042d57600080fd5b5061022a61043c36600461208d565b6110f2565b34801561044d57600080fd5b5061025e60405180604001604052806005815260200164181718171960d91b81525081565b34801561047e57600080fd5b5061022a61048d366004612104565b61122e565b34801561049e57600080fd5b506102ed611383565b3480156104b357600080fd5b506104bc611399565b60405165ffffffffffff909116815260200161026b565b3480156104df57600080fd5b506102896113bc565b3480156104f457600080fd5b506102897f000000000000000000000000000000000000000000000000000000000000000081565b34801561052857600080fd5b506102ed610537366004612183565b63bc197c8160e01b98975050505050505050565b34801561055757600080fd5b506103866113df565b34801561056c57600080fd5b5061022a61057b366004612104565b611476565b34801561058c57600080fd5b5061022a61059b366004612072565b6115e8565b3480156105ac57600080fd5b506102ed6105bb366004612241565b63f23a6e6160e01b9695505050505050565b6000806105fb60017f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd96122d2565b92915050565b600061060b6105cd565b600201546001600160a01b0316919050565b60006106276105cd565b60010154600160501b90046001600160a01b0390811691507f00000000000000000000000000000000000000000000000000000000000000001633148061066d57503330145b806106805750336001600160a01b038216145b61069c5760405162461bcd60e51b81526004016101b4906122e5565b6001600160a01b0382166106e85760405162461bcd60e51b81526020600482015260136024820152720416464726573732063616e6e6f74206265203606c1b60448201526064016101b4565b816106f16105cd565b600101600a6101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b6000806107276105cd565b6002015460405163199ed7c960e11b81526001600160a01b039091169063333daf929061075c9088908890889060040161235b565b602060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079d919061237e565b905060006107aa826116ba565b905042816020015165ffffffffffff1611156107d357506001600160e01b0319915061082a9050565b42816040015165ffffffffffff1610156107fa57506001600160e01b0319915061082a9050565b80516001600160a01b03161561081d57506001600160e01b0319915061082a9050565b50630b135d3f60e11b9150505b9392505050565b600061083b6105cd565b60010154600160501b90046001600160a01b0390811691507f00000000000000000000000000000000000000000000000000000000000000001633148061088157503330145b806108945750336001600160a01b038216145b6108b05760405162461bcd60e51b81526004016101b4906122e5565b60405180608001604052808665ffffffffffff1681526020018565ffffffffffff168152602001886001600160a01b03168152602001876001600160a01b03168152506108fb6105cd565b6001600160e01b03198a166000908152600391909101602090815260409182902083518154928501518585015165ffffffffffff9283166001600160601b031990951694909417600160301b9290911691909102176001600160601b0316600160601b6001600160a01b0393841602178155606090930151600190930180546001600160a01b031916938216939093179092555163064acaab60e11b815290871690630c959556906109b39086908690600401612397565b600060405180830381600087803b1580156109cd57600080fd5b505af11580156109e1573d6000803e3d6000fd5b50506040516001600160a01b03808a1693508a1691506001600160e01b03198b16907fed03d2572564284398470d3f266a693e29ddfff3eba45fc06c5e91013d32135390600090a45050505050505050565b6000610a3d6105cd565b60010154600160501b90046001600160a01b0390811691507f000000000000000000000000000000000000000000000000000000000000000016331480610a8357503330145b80610a965750336001600160a01b038216145b610ab25760405162461bcd60e51b81526004016101b4906122e5565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8281556040516001600160a01b038416907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b895760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279506f696e740000000060448201526064016101b4565b6000610b996101408601866123b3565b610ba8916004916000916123f9565b610bb191612423565b9050610bbb6105cd565b6001015460e01b81166001600160e01b03191615610c135760405162461bcd60e51b81526020600482015260156024820152741ad95c9b995b0e881b5bd91948191a5cd8589b1959605a1b60448201526064016101b4565b6000610c1e8661251e565b9050600080610c3060608901896123b3565b610c3f916004916000916123f9565b610c4891612423565b90506001600160e01b03198416600003610cd957610c658861251e565b9250610c756101408901896123b3565b610c839160049082906123f9565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505050610140840152610cc56105cd565b600201546001600160a01b03169150610ee4565b6001600160e01b03198416600160e01b03610dc8576000610cf86105cd565b6001600160e01b0319831660009081526003919091016020526040902060018101546001600160a01b03169350905082610d4457610d346105cd565b600201546001600160a01b031692505b610d526101408a018a6123b3565b610d609160049082906123f9565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506101408501525460d081901b6001600160d01b031916600160301b90910460a01b65ffffffffffff60a01b16179450610ee4565b6001600160e01b03198416600160e11b03610ed757610deb6101408901896123b3565b610dfa916024916010916123f9565b610e039161262c565b60601c91503660008181610e2485610e1f6101408f018f6123b3565b61172b565b60405163064acaab60e11b8152949d50929750909550935091506001600160a01b03871690630c95955690610e5f9087908790600401612397565b600060405180830381600087803b158015610e7957600080fd5b505af1158015610e8d573d6000803e3d6000fd5b5050505081818080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505061014088015250610ee492505050565b600194505050505061082a565b8515610f3657604051600090339088908381818185875af1925050503d8060008114610f2c576040519150601f19603f3d011682016040523d82523d6000602084013e610f31565b606091505b505050505b610fb285836001600160a01b0316633a871cdd868b8b6040518463ffffffff1660e01b8152600401610f6a9392919061265a565b6020604051808303816000875af1158015610f89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fad919061237e565b611ad5565b98975050505050505050565b604051631aab3f0d60e11b81523060048201526001600160c01b03821660248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401602060405180830381865afa158015611034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fb919061237e565b6040805160808101825260008082526020820181905291810182905260608101919091526110846105cd565b6001600160e01b0319909216600090815260039290920160209081526040928390208351608081018552815465ffffffffffff8082168352600160301b820416938201939093526001600160a01b03600160601b909304831694810194909452600101541660608301525090565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461116a5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e740000000060448201526064016101b4565b6000606060018360018111156111825761118261274c565b036111d1576111c78786868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611ba892505050565b9092509050611218565b611212878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bde92505050565b90925090505b8161122557805160208201fd5b50505050505050565b60006112386105cd565b60010154600160501b90046001600160a01b0390811691507f00000000000000000000000000000000000000000000000000000000000000001633148061127e57503330145b806112915750336001600160a01b038216145b6112ad5760405162461bcd60e51b81526004016101b4906122e5565b60006112b76105cd565b600201546001600160a01b03169050846112cf6105cd565b60020180546001600160a01b0319166001600160a01b03928316179055604051868216918316907fa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c90600090a360405163064acaab60e11b81526001600160a01b03861690630c9595569061134a9087908790600401612397565b600060405180830381600087803b15801561136457600080fd5b505af1158015611378573d6000803e3d6000fd5b505050505050505050565b600061138d6105cd565b6001015460e01b919050565b60006113a36105cd565b60010154640100000000900465ffffffffffff16919050565b60006113c66105cd565b60010154600160501b90046001600160a01b0316919050565b604051631aab3f0d60e11b8152306004820152600060248201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401602060405180830381865afa15801561144d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611471919061237e565b905090565b60006114806105cd565b60028101549091506001600160a01b0316156114de5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a20616c726561647920696e697469616c697a65640000000060448201526064016101b4565b6002810180546001600160a01b0319166001600160a01b0386161790556115096014600084866123f9565b6115129161262c565b6001820180547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660609290921c600160501b029190911790556040516001600160a01b038516906000907fa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c908290a360405163064acaab60e11b81526001600160a01b03851690630c959556906115b09086908690600401612397565b600060405180830381600087803b1580156115ca57600080fd5b505af11580156115de573d6000803e3d6000fd5b5050505050505050565b60006115f26105cd565b60010154600160501b90046001600160a01b0390811691507f00000000000000000000000000000000000000000000000000000000000000001633148061163857503330145b8061164b5750336001600160a01b038216145b6116675760405162461bcd60e51b81526004016101b4906122e5565b816116706105cd565b600101805463ffffffff191660e09290921c919091179055426116916105cd565b60010160046101000a81548165ffffffffffff021916908365ffffffffffff1602179055505050565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff81166000036116f6575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000368181818061174060586038898b6123f9565b61174991612762565b9050876058886117598483612780565b92611766939291906123f9565b90955093506000888861177a846058612780565b90611786856078612780565b92611793939291906123f9565b61179c91612762565b60001c9050600061187d7f3ce406685c1b3551d706d85a68afdaa49ac4e07b451ad9b8ff8b58c3ee9641768c8c8c6004906024926117dc939291906123f9565b6117e591612762565b60001c8d8d6024906038926117fc939291906123f9565b6118059161262c565b60601c8b8b604051611818929190612793565b60405190819003812061186295949392916020019485526001600160e01b031993909316602085015260408401919091526001600160a01b03166060830152608082015260a00190565b60405160208183030381529060405280519060200120611c16565b905061195e61188a6105cd565b600201546001600160a01b031663333daf92838d8d6118aa896078612780565b90886118b78b6078612780565b6118c19190612780565b926118ce939291906123f9565b6040518463ffffffff1660e01b81526004016118ec9392919061235b565b602060405180830381865afa158015611909573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192d919061237e565b60a06001600160601b038016901b8c8c60049060249261194f939291906123f9565b61195891612762565b16611ad5565b975089898361196e866078612780565b6119789190612780565b6119839282906123f9565b60408051608081019091529196509450806119a2600a60048d8f6123f9565b6119ab916127a3565b60d01c81526020016119c16010600a8d8f6123f9565b6119ca916127a3565b60d01c81526020016119e0603860248d8f6123f9565b6119e99161262c565b60601c81526020016119ff602460108d8f6123f9565b611a089161262c565b60601c9052611a156105cd565b6001600160e01b03198d166000908152600391909101602090815260409182902083518154928501519385015165ffffffffffff9182166001600160601b031990941693909317600160301b9190941602929092176001600160601b0316600160601b6001600160a01b0392831602178255606090920151600190910180546001600160a01b03191691909216179055878a60588b611ab48783612780565b92611ac1939291906123f9565b975097509750505050939792965093509350565b6000816001600160a01b0316836001600160a01b031614611af8575060016105fb565b60d083901c60a084901c65ffffffffffff8116600003611b1b575065ffffffffffff5b60d084901c60a085901c65ffffffffffff8116600003611b3e575065ffffffffffff5b8165ffffffffffff168465ffffffffffff161015611b5a578193505b8065ffffffffffff168365ffffffffffff161115611b76578092505b60d08465ffffffffffff16901b60a08465ffffffffffff16901b886001600160a01b0316171794505050505092915050565b60006060600080845160208601875af491503d604051602082018101604052818152816000602083013e80925050509250929050565b6000606060008084516020860187895af191503d604051602082018101604052818152816000602083013e8092505050935093915050565b60006105fb611c23611c64565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611cbd57507f000000000000000000000000000000000000000000000000000000000000000046145b15611ce757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000815180845260005b81811015611db157602081850181015186830182015201611d95565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061082a6020830184611d8b565b6001600160a01b0381168114611df957600080fd5b50565b8035611e0781611de4565b919050565b600060208284031215611e1e57600080fd5b813561082a81611de4565b60008083601f840112611e3b57600080fd5b5081356001600160401b03811115611e5257600080fd5b602083019150836020828501011115611e6a57600080fd5b9250929050565b600080600080600060808688031215611e8957600080fd5b8535611e9481611de4565b94506020860135611ea481611de4565b93506040860135925060608601356001600160401b03811115611ec657600080fd5b611ed288828901611e29565b969995985093965092949392505050565b600080600060408486031215611ef857600080fd5b8335925060208401356001600160401b03811115611f1557600080fd5b611f2186828701611e29565b9497909650939450505050565b80356001600160e01b031981168114611e0757600080fd5b803565ffffffffffff81168114611e0757600080fd5b600080600080600080600060c0888a031215611f7757600080fd5b611f8088611f2e565b96506020880135611f9081611de4565b95506040880135611fa081611de4565b9450611fae60608901611f46565b9350611fbc60808901611f46565b925060a08801356001600160401b03811115611fd757600080fd5b611fe38a828b01611e29565b989b979a50959850939692959293505050565b60008060006060848603121561200b57600080fd5b83356001600160401b0381111561202157600080fd5b8401610160818703121561203457600080fd5b95602085013595506040909401359392505050565b60006020828403121561205b57600080fd5b81356001600160c01b038116811461082a57600080fd5b60006020828403121561208457600080fd5b61082a82611f2e565b6000806000806000608086880312156120a557600080fd5b85356120b081611de4565b94506020860135935060408601356001600160401b038111156120d257600080fd5b6120de88828901611e29565b9094509250506060860135600281106120f657600080fd5b809150509295509295909350565b60008060006040848603121561211957600080fd5b833561212481611de4565b925060208401356001600160401b03811115611f1557600080fd5b60008083601f84011261215157600080fd5b5081356001600160401b0381111561216857600080fd5b6020830191508360208260051b8501011115611e6a57600080fd5b60008060008060008060008060a0898b03121561219f57600080fd5b88356121aa81611de4565b975060208901356121ba81611de4565b965060408901356001600160401b03808211156121d657600080fd5b6121e28c838d0161213f565b909850965060608b01359150808211156121fb57600080fd5b6122078c838d0161213f565b909650945060808b013591508082111561222057600080fd5b5061222d8b828c01611e29565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561225a57600080fd5b863561226581611de4565b9550602087013561227581611de4565b9450604087013593506060870135925060808701356001600160401b0381111561229e57600080fd5b6122aa89828a01611e29565b979a9699509497509295939492505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156105fb576105fb6122bc565b6020808252602d908201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060408201526c37bbb732b91037b91039b2b63360991b606082015260800190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b838152604060208201526000612375604083018486612332565b95945050505050565b60006020828403121561239057600080fd5b5051919050565b6020815260006123ab602083018486612332565b949350505050565b6000808335601e198436030181126123ca57600080fd5b8301803591506001600160401b038211156123e457600080fd5b602001915036819003821315611e6a57600080fd5b6000808585111561240957600080fd5b8386111561241657600080fd5b5050820193919092039150565b6001600160e01b0319813581811691600485101561244b5780818660040360031b1b83161692505b505092915050565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b038111828210171561248c5761248c612453565b60405290565b600082601f8301126124a357600080fd5b81356001600160401b03808211156124bd576124bd612453565b604051601f8301601f19908116603f011681019082821181831017156124e5576124e5612453565b816040528381528660208588010111156124fe57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000610160823603121561253157600080fd5b612539612469565b61254283611dfc565b81526020830135602082015260408301356001600160401b038082111561256857600080fd5b61257436838701612492565b6040840152606085013591508082111561258d57600080fd5b61259936838701612492565b60608401526080850135608084015260a085013560a084015260c085013560c084015260e085013560e084015261010091508185013582840152610120915081850135818111156125e957600080fd5b6125f536828801612492565b83850152506101409150818501358181111561261057600080fd5b61261c36828801612492565b8385015250505080915050919050565b6001600160601b0319813581811691601485101561244b5760149490940360031b84901b1690921692915050565b606081526126746060820185516001600160a01b03169052565b60208401516080820152600060408501516101608060a085015261269c6101c0850183611d8b565b91506060870151605f19808685030160c08701526126ba8483611d8b565b9350608089015160e087015260a08901519150610100828188015260c08a01519250610120838189015260e08b0151935061014084818a0152828c0151868a0152818c0151955083898803016101808a01526127168787611d8b565b9650808c0151955050505080868503016101a087015250506127388282611d8b565b602085019690965250505060400152919050565b634e487b7160e01b600052602160045260246000fd5b803560208310156105fb57600019602084900360031b1b1692915050565b808201808211156105fb576105fb6122bc565b8183823760009101908152919050565b6001600160d01b0319813581811691600685101561244b5760069490940360031b84901b169092169291505056";

type KernelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KernelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Kernel__factory extends ContractFactory {
  constructor(...args: KernelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Kernel> {
    return super.deploy(_entryPoint, overrides || {}) as Promise<Kernel>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): Kernel {
    return super.attach(address) as Kernel;
  }
  override connect(signer: Signer): Kernel__factory {
    return super.connect(signer) as Kernel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KernelInterface {
    return new utils.Interface(_abi) as KernelInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Kernel {
    return new Contract(address, _abi, signerOrProvider) as Kernel;
  }
}
