/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Kernel, KernelInterface } from "../Kernel";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldValidator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newValidator",
        type: "address",
      },
    ],
    name: "DefaultValidatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: true,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "validator",
        type: "address",
      },
    ],
    name: "ExecutionChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_disableFlag",
        type: "bytes4",
      },
    ],
    name: "disableMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDefaultValidator",
    outputs: [
      {
        internalType: "contract IKernelValidator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDisabledMode",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
    ],
    name: "getExecution",
    outputs: [
      {
        components: [
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "address",
            name: "executor",
            type: "address",
          },
          {
            internalType: "contract IKernelValidator",
            name: "validator",
            type: "address",
          },
        ],
        internalType: "struct ExecutionDetail",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastDisabledTime",
    outputs: [
      {
        internalType: "uint48",
        name: "",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "key",
        type: "uint192",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IKernelValidator",
        name: "_defaultValidator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IKernelValidator",
        name: "_defaultValidator",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "setDefaultValidator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_selector",
        type: "bytes4",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "contract IKernelValidator",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "_validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "_enableData",
        type: "bytes",
      },
    ],
    name: "setExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4[]",
        name: "_selectors",
        type: "bytes4[]",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "contract IKernelValidator",
        name: "_validator",
        type: "address",
      },
      {
        internalType: "uint48",
        name: "_validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "_validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "_enableData",
        type: "bytes",
      },
    ],
    name: "setExecutionMultiSelector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002d9838038062002d98833981016040819052620000359162000189565b604080518082018252600681526512d95c9b995b60d21b6020808301918252835180850185526005815264181718171960d91b908201529151902060e08190527fb30367effb941b728181f67f3bd24a38a4fff408ee7fb3b074425c9fb5e9be746101008190524660a081815285517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818701819052818801959095526060810193909352608080840192909252308382018190528651808503909201825260c09384019096528051940193909320909252919052610120526001600160a01b038116610140528060016200012962000153565b60020180546001600160a01b0319166001600160a01b039290921691909117905550620001dd9050565b6000806200018360017f0e3541ef58cccd4b9ee2f8d8167d7365bcd2a9cf0035ab532e90d59f17afc665620001bb565b92915050565b6000602082840312156200019c57600080fd5b81516001600160a01b0381168114620001b457600080fd5b9392505050565b818103818111156200018357634e487b7160e01b600052601160045260246000fd5b60805160a05160c05160e051610100516101205161014051612b1a6200027e60003960008181610488015281816105ef0152818161080c01528181610a0e01528181610ad301528181610f91015281816110a9015281816111fe015281816113aa015281816115b8015261168a01526000611eee01526000611f3d01526000611f1801526000611e7101526000611e9b01526000611ec50152612b1a6000f3fe6080604052600436106101445760003560e01c806354fd4d50116100b6578063bc197c811161006f578063bc197c81146104aa578063d087d288146104d9578063d1f57894146104ee578063d54162211461050e578063f23a6e611461052e578063f688e2e51461055b5761014b565b806354fd4d50146103cf57806355b14f501461040057806357b750471461042057806388e7fd0614610435578063893d20e814610461578063b0d691fe146104765761014b565b806329f8b1741161010857806329f8b174146102b45780633659cfe6146102d45780633a871cdd146102f45780633e1b08121461032257806351166ba01461034257806351945447146103af5761014b565b806306fdde03146101ba5780630b3dc3541461020257806313af40351461022f578063150b7a021461024f5780631626ba7e146102945761014b565b3661014b57005b600080356001600160e01b0319169050600061016561057b565b6001600160e01b0319831660009081526003919091016020526040812054600160601b90046001600160a01b0316915036908037600080366000845af43d6000803e8080156101b3573d6000f35b3d6000fd5b005b3480156101c657600080fd5b506101ec6040518060400160405280600681526020016512d95c9b995b60d21b81525081565b6040516101f99190611fd1565b60405180910390f35b34801561020e57600080fd5b506102176105af565b6040516001600160a01b0390911681526020016101f9565b34801561023b57600080fd5b506101b861024a36600461200c565b6105cb565b34801561025b57600080fd5b5061027b61026a366004612071565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101f9565b3480156102a057600080fd5b5061027b6102af3660046120e3565b6106d3565b3480156102c057600080fd5b506101b86102cf36600461215c565b6107e8565b3480156102e057600080fd5b506101b86102ef36600461200c565b6109ea565b34801561030057600080fd5b5061031461030f3660046121f6565b610ac6565b6040519081526020016101f9565b34801561032e57600080fd5b5061031461033d366004612249565b610f6a565b34801561034e57600080fd5b5061036261035d366004612272565b611004565b60408051825165ffffffffffff908116825260208085015190911690820152828201516001600160a01b0390811692820192909252606092830151909116918101919091526080016101f9565b3480156103bb57600080fd5b506101b86103ca36600461228d565b61109e565b3480156103db57600080fd5b506101ec60405180604001604052806005815260200164181718171960d91b81525081565b34801561040c57600080fd5b506101b861041b366004612304565b6111da565b34801561042c57600080fd5b5061027b61132f565b34801561044157600080fd5b5061044a611345565b60405165ffffffffffff90911681526020016101f9565b34801561046d57600080fd5b50610217611368565b34801561048257600080fd5b506102177f000000000000000000000000000000000000000000000000000000000000000081565b3480156104b657600080fd5b5061027b6104c5366004612383565b63bc197c8160e01b98975050505050505050565b3480156104e557600080fd5b5061031461138b565b3480156104fa57600080fd5b506101b8610509366004612304565b611422565b34801561051a57600080fd5b506101b8610529366004612272565b611594565b34801561053a57600080fd5b5061027b610549366004612441565b63f23a6e6160e01b9695505050505050565b34801561056757600080fd5b506101b861057636600461252b565b611666565b6000806105a960017f0e3541ef58cccd4b9ee2f8d8167d7365bcd2a9cf0035ab532e90d59f17afc665612648565b92915050565b60006105b961057b565b600201546001600160a01b0316919050565b60006105d561057b565b60010154600160501b90046001600160a01b0390811691507f00000000000000000000000000000000000000000000000000000000000000001633148061061b57503330145b8061062e5750336001600160a01b038216145b6106535760405162461bcd60e51b815260040161064a9061265b565b60405180910390fd5b6001600160a01b03821661069f5760405162461bcd60e51b81526020600482015260136024820152720416464726573732063616e6e6f74206265203606c1b604482015260640161064a565b816106a861057b565b600101600a6101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b6000806106de61057b565b6002015460405163199ed7c960e11b81526001600160a01b039091169063333daf9290610713908890889088906004016126d1565b602060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075491906126f4565b90506000610761826118ba565b905042816020015165ffffffffffff16111561078a57506001600160e01b031991506107e19050565b42816040015165ffffffffffff1610156107b157506001600160e01b031991506107e19050565b80516001600160a01b0316156107d457506001600160e01b031991506107e19050565b50630b135d3f60e11b9150505b9392505050565b60006107f261057b565b60010154600160501b90046001600160a01b0390811691507f00000000000000000000000000000000000000000000000000000000000000001633148061083857503330145b8061084b5750336001600160a01b038216145b6108675760405162461bcd60e51b815260040161064a9061265b565b60405180608001604052808665ffffffffffff1681526020018565ffffffffffff168152602001886001600160a01b03168152602001876001600160a01b03168152506108b261057b565b6001600160e01b03198a166000908152600391909101602090815260409182902083518154928501518585015165ffffffffffff9283166001600160601b031990951694909417600160301b9290911691909102176001600160601b0316600160601b6001600160a01b0393841602178155606090930151600190930180546001600160a01b031916938216939093179092555163064acaab60e11b815290871690630c9595569061096a908690869060040161270d565b600060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b50506040516001600160a01b03808a1693508a1691506001600160e01b03198b16907fed03d2572564284398470d3f266a693e29ddfff3eba45fc06c5e91013d32135390600090a45050505050505050565b60006109f461057b565b60010154600160501b90046001600160a01b0390811691507f000000000000000000000000000000000000000000000000000000000000000016331480610a3a57503330145b80610a4d5750336001600160a01b038216145b610a695760405162461bcd60e51b815260040161064a9061265b565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8281556040516001600160a01b038416907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b405760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e7400000000604482015260640161064a565b6000610b50610140860186612729565b610b5f9160049160009161276f565b610b6891612799565b9050610b7261057b565b6001015460e01b81166001600160e01b03191615610bca5760405162461bcd60e51b81526020600482015260156024820152741ad95c9b995b0e881b5bd91948191a5cd8589b1959605a1b604482015260640161064a565b6000610bd586612838565b9050600080610be76060890189612729565b610bf69160049160009161276f565b610bff91612799565b90506001600160e01b03198416600003610c8557610c21610140890189612729565b610c2f91600490829061276f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505050610140840152610c7161057b565b600201546001600160a01b03169150610e90565b6001600160e01b03198416600160e01b03610d74576000610ca461057b565b6001600160e01b0319831660009081526003919091016020526040902060018101546001600160a01b03169350905082610cf057610ce061057b565b600201546001600160a01b031692505b610cfe6101408a018a612729565b610d0c91600490829061276f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050506101408501525460d081901b6001600160d01b031916600160301b90910460a01b65ffffffffffff60a01b16179450610e90565b6001600160e01b03198416600160e11b03610e8357610d97610140890189612729565b610da69160249160109161276f565b610daf91612946565b60601c91503660008181610dd085610dcb6101408f018f612729565b61192b565b60405163064acaab60e11b8152949d50929750909550935091506001600160a01b03871690630c95955690610e0b908790879060040161270d565b600060405180830381600087803b158015610e2557600080fd5b505af1158015610e39573d6000803e3d6000fd5b5050505081818080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505061014088015250610e9092505050565b60019450505050506107e1565b8515610ee257604051600090339088908381818185875af1925050503d8060008114610ed8576040519150601f19603f3d011682016040523d82523d6000602084013e610edd565b606091505b505050505b610f5e85836001600160a01b0316633a871cdd868b8b6040518463ffffffff1660e01b8152600401610f1693929190612974565b6020604051808303816000875af1158015610f35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f5991906126f4565b611cd5565b98975050505050505050565b604051631aab3f0d60e11b81523060048201526001600160c01b03821660248201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401602060405180830381865afa158015610fe0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a991906126f4565b60408051608081018252600080825260208201819052918101829052606081019190915261103061057b565b6001600160e01b0319909216600090815260039290920160209081526040928390208351608081018552815465ffffffffffff8082168352600160301b820416938201939093526001600160a01b03600160601b909304831694810194909452600101541660608301525090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111165760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e7400000000604482015260640161064a565b60006060600183600181111561112e5761112e612a66565b0361117d576111738786868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611da892505050565b90925090506111c4565b6111be878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611dde92505050565b90925090505b816111d157805160208201fd5b50505050505050565b60006111e461057b565b60010154600160501b90046001600160a01b0390811691507f00000000000000000000000000000000000000000000000000000000000000001633148061122a57503330145b8061123d5750336001600160a01b038216145b6112595760405162461bcd60e51b815260040161064a9061265b565b600061126361057b565b600201546001600160a01b031690508461127b61057b565b60020180546001600160a01b0319166001600160a01b03928316179055604051868216918316907fa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c90600090a360405163064acaab60e11b81526001600160a01b03861690630c959556906112f6908790879060040161270d565b600060405180830381600087803b15801561131057600080fd5b505af1158015611324573d6000803e3d6000fd5b505050505050505050565b600061133961057b565b6001015460e01b919050565b600061134f61057b565b60010154640100000000900465ffffffffffff16919050565b600061137261057b565b60010154600160501b90046001600160a01b0316919050565b604051631aab3f0d60e11b8152306004820152600060248201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906335567e1a90604401602060405180830381865afa1580156113f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061141d91906126f4565b905090565b600061142c61057b565b60028101549091506001600160a01b03161561148a5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a20616c726561647920696e697469616c697a656400000000604482015260640161064a565b6002810180546001600160a01b0319166001600160a01b0386161790556114b560146000848661276f565b6114be91612946565b6001820180547fffff0000000000000000000000000000000000000000ffffffffffffffffffff1660609290921c600160501b029190911790556040516001600160a01b038516906000907fa35f5cdc5fbabb614b4cd5064ce5543f43dc8fab0e4da41255230eb8aba2531c908290a360405163064acaab60e11b81526001600160a01b03851690630c9595569061155c908690869060040161270d565b600060405180830381600087803b15801561157657600080fd5b505af115801561158a573d6000803e3d6000fd5b5050505050505050565b600061159e61057b565b60010154600160501b90046001600160a01b0390811691507f0000000000000000000000000000000000000000000000000000000000000000163314806115e457503330145b806115f75750336001600160a01b038216145b6116135760405162461bcd60e51b815260040161064a9061265b565b8161161c61057b565b600101805463ffffffff191660e09290921c9190911790554261163d61057b565b60010160046101000a81548165ffffffffffff021916908365ffffffffffff1602179055505050565b600061167061057b565b60010154600160501b90046001600160a01b0390811691507f0000000000000000000000000000000000000000000000000000000000000000163314806116b657503330145b806116c95750336001600160a01b038216145b6116e55760405162461bcd60e51b815260040161064a9061265b565b60005b88518110156113245760405180608001604052808765ffffffffffff1681526020018665ffffffffffff168152602001896001600160a01b03168152602001886001600160a01b031681525061173c61057b565b60030160008b848151811061175357611753612a7c565b6020908102919091018101516001600160e01b031916825281810192909252604090810160002083518154938501518584015165ffffffffffff9283166001600160601b031990961695909517600160301b9290911691909102176001600160601b0316600160601b6001600160a01b0394851602178155606090930151600190930180546001600160a01b03191693831693909317909255905163064acaab60e11b815290881690630c95955690611812908790879060040161270d565b600060405180830381600087803b15801561182c57600080fd5b505af1158015611840573d6000803e3d6000fd5b50505050866001600160a01b0316886001600160a01b03168a838151811061186a5761186a612a7c565b60200260200101516001600160e01b0319167fed03d2572564284398470d3f266a693e29ddfff3eba45fc06c5e91013d32135360405160405180910390a4806118b281612a92565b9150506116e8565b60408051606081018252600080825260208201819052918101919091528160a081901c65ffffffffffff81166000036118f6575065ffffffffffff5b604080516060810182526001600160a01b03909316835260d09490941c602083015265ffffffffffff16928101929092525090565b6000368181818061194060586038898b61276f565b61194991612aab565b9050876058886119598483612ac9565b926119669392919061276f565b90955093506000888861197a846058612ac9565b90611986856078612ac9565b926119939392919061276f565b61199c91612aab565b60001c90506000611a7d7f3ce406685c1b3551d706d85a68afdaa49ac4e07b451ad9b8ff8b58c3ee9641768c8c8c6004906024926119dc9392919061276f565b6119e591612aab565b60001c8d8d6024906038926119fc9392919061276f565b611a0591612946565b60601c8b8b604051611a18929190612adc565b604051908190038120611a6295949392916020019485526001600160e01b031993909316602085015260408401919091526001600160a01b03166060830152608082015260a00190565b60405160208183030381529060405280519060200120611e16565b9050611b5e611a8a61057b565b600201546001600160a01b031663333daf92838d8d611aaa896078612ac9565b9088611ab78b6078612ac9565b611ac19190612ac9565b92611ace9392919061276f565b6040518463ffffffff1660e01b8152600401611aec939291906126d1565b602060405180830381865afa158015611b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2d91906126f4565b60a06001600160601b038016901b8c8c600490602492611b4f9392919061276f565b611b5891612aab565b16611cd5565b9750898983611b6e866078612ac9565b611b789190612ac9565b611b8392829061276f565b6040805160808101909152919650945080611ba2600a60048d8f61276f565b611bab91612aec565b60d01c8152602001611bc16010600a8d8f61276f565b611bca91612aec565b60d01c8152602001611be0603860248d8f61276f565b611be991612946565b60601c8152602001611bff602460108d8f61276f565b611c0891612946565b60601c9052611c1561057b565b6001600160e01b03198d166000908152600391909101602090815260409182902083518154928501519385015165ffffffffffff9182166001600160601b031990941693909317600160301b9190941602929092176001600160601b0316600160601b6001600160a01b0392831602178255606090920151600190910180546001600160a01b03191691909216179055878a60588b611cb48783612ac9565b92611cc19392919061276f565b975097509750505050939792965093509350565b6000816001600160a01b0316836001600160a01b031614611cf8575060016105a9565b60d083901c60a084901c65ffffffffffff8116600003611d1b575065ffffffffffff5b60d084901c60a085901c65ffffffffffff8116600003611d3e575065ffffffffffff5b8165ffffffffffff168465ffffffffffff161015611d5a578193505b8065ffffffffffff168365ffffffffffff161115611d76578092505b60d08465ffffffffffff16901b60a08465ffffffffffff16901b886001600160a01b0316171794505050505092915050565b60006060600080845160208601875af491503d604051602082018101604052818152816000602083013e80925050509250929050565b6000606060008084516020860187895af191503d604051602082018101604052818152816000602083013e8092505050935093915050565b60006105a9611e23611e64565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611ebd57507f000000000000000000000000000000000000000000000000000000000000000046145b15611ee757507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000815180845260005b81811015611fb157602081850181015186830182015201611f95565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006107e16020830184611f8b565b6001600160a01b0381168114611ff957600080fd5b50565b803561200781611fe4565b919050565b60006020828403121561201e57600080fd5b81356107e181611fe4565b60008083601f84011261203b57600080fd5b5081356001600160401b0381111561205257600080fd5b60208301915083602082850101111561206a57600080fd5b9250929050565b60008060008060006080868803121561208957600080fd5b853561209481611fe4565b945060208601356120a481611fe4565b93506040860135925060608601356001600160401b038111156120c657600080fd5b6120d288828901612029565b969995985093965092949392505050565b6000806000604084860312156120f857600080fd5b8335925060208401356001600160401b0381111561211557600080fd5b61212186828701612029565b9497909650939450505050565b80356001600160e01b03198116811461200757600080fd5b803565ffffffffffff8116811461200757600080fd5b600080600080600080600060c0888a03121561217757600080fd5b6121808861212e565b9650602088013561219081611fe4565b955060408801356121a081611fe4565b94506121ae60608901612146565b93506121bc60808901612146565b925060a08801356001600160401b038111156121d757600080fd5b6121e38a828b01612029565b989b979a50959850939692959293505050565b60008060006060848603121561220b57600080fd5b83356001600160401b0381111561222157600080fd5b8401610160818703121561223457600080fd5b95602085013595506040909401359392505050565b60006020828403121561225b57600080fd5b81356001600160c01b03811681146107e157600080fd5b60006020828403121561228457600080fd5b6107e18261212e565b6000806000806000608086880312156122a557600080fd5b85356122b081611fe4565b94506020860135935060408601356001600160401b038111156122d257600080fd5b6122de88828901612029565b9094509250506060860135600281106122f657600080fd5b809150509295509295909350565b60008060006040848603121561231957600080fd5b833561232481611fe4565b925060208401356001600160401b0381111561211557600080fd5b60008083601f84011261235157600080fd5b5081356001600160401b0381111561236857600080fd5b6020830191508360208260051b850101111561206a57600080fd5b60008060008060008060008060a0898b03121561239f57600080fd5b88356123aa81611fe4565b975060208901356123ba81611fe4565b965060408901356001600160401b03808211156123d657600080fd5b6123e28c838d0161233f565b909850965060608b01359150808211156123fb57600080fd5b6124078c838d0161233f565b909650945060808b013591508082111561242057600080fd5b5061242d8b828c01612029565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561245a57600080fd5b863561246581611fe4565b9550602087013561247581611fe4565b9450604087013593506060870135925060808701356001600160401b0381111561249e57600080fd5b6124aa89828a01612029565b979a9699509497509295939492505050565b634e487b7160e01b600052604160045260246000fd5b60405161016081016001600160401b03811182821017156124f5576124f56124bc565b60405290565b604051601f8201601f191681016001600160401b0381118282101715612523576125236124bc565b604052919050565b600080600080600080600060c0888a03121561254657600080fd5b87356001600160401b038082111561255d57600080fd5b818a0191508a601f83011261257157600080fd5b8135602082821115612585576125856124bc565b8160051b6125948282016124fb565b928352848101820192828101908f8511156125ae57600080fd5b958301955b848710156125d3576125c48761212e565b825295830195908301906125b3565b9c506125e39150508c8201611ffc565b995050506125f360408b01611ffc565b965061260160608b01612146565b955061260f60808b01612146565b945060a08a013591508082111561262557600080fd5b506121e38a828b01612029565b634e487b7160e01b600052601160045260246000fd5b818103818111156105a9576105a9612632565b6020808252602d908201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060408201526c37bbb732b91037b91039b2b63360991b606082015260800190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b8381526040602082015260006126eb6040830184866126a8565b95945050505050565b60006020828403121561270657600080fd5b5051919050565b6020815260006127216020830184866126a8565b949350505050565b6000808335601e1984360301811261274057600080fd5b8301803591506001600160401b0382111561275a57600080fd5b60200191503681900382131561206a57600080fd5b6000808585111561277f57600080fd5b8386111561278c57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156127c15780818660040360031b1b83161692505b505092915050565b600082601f8301126127da57600080fd5b81356001600160401b038111156127f3576127f36124bc565b612806601f8201601f19166020016124fb565b81815284602083860101111561281b57600080fd5b816020850160208301376000918101602001919091529392505050565b6000610160823603121561284b57600080fd5b6128536124d2565b61285c83611ffc565b81526020830135602082015260408301356001600160401b038082111561288257600080fd5b61288e368387016127c9565b604084015260608501359150808211156128a757600080fd5b6128b3368387016127c9565b60608401526080850135608084015260a085013560a084015260c085013560c084015260e085013560e0840152610100915081850135828401526101209150818501358181111561290357600080fd5b61290f368288016127c9565b83850152506101409150818501358181111561292a57600080fd5b612936368288016127c9565b8385015250505080915050919050565b6001600160601b031981358181169160148510156127c15760149490940360031b84901b1690921692915050565b6060815261298e6060820185516001600160a01b03169052565b60208401516080820152600060408501516101608060a08501526129b66101c0850183611f8b565b91506060870151605f19808685030160c08701526129d48483611f8b565b9350608089015160e087015260a08901519150610100828188015260c08a01519250610120838189015260e08b0151935061014084818a0152828c0151868a0152818c0151955083898803016101808a0152612a308787611f8b565b9650808c0151955050505080868503016101a08701525050612a528282611f8b565b602085019690965250505060400152919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060018201612aa457612aa4612632565b5060010190565b803560208310156105a957600019602084900360031b1b1692915050565b808201808211156105a9576105a9612632565b8183823760009101908152919050565b6001600160d01b031981358181169160068510156127c15760069490940360031b84901b169092169291505056";

type KernelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KernelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Kernel__factory extends ContractFactory {
  constructor(...args: KernelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Kernel> {
    return super.deploy(_entryPoint, overrides || {}) as Promise<Kernel>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): Kernel {
    return super.attach(address) as Kernel;
  }
  override connect(signer: Signer): Kernel__factory {
    return super.connect(signer) as Kernel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KernelInterface {
    return new utils.Interface(_abi) as KernelInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Kernel {
    return new Contract(address, _abi, signerOrProvider) as Kernel;
  }
}
