/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SubExecutor, SubExecutorInterface } from "../SubExecutor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_subscriber",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "paymentProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_subscriber",
        type: "address",
      },
    ],
    name: "revokedApproval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_subscriber",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "subscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_subscriber",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "subscriptionModified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_validUntil",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_erc20Token",
        type: "address",
      },
    ],
    name: "createSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
    ],
    name: "getLastPaidTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
    ],
    name: "getPaymentHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "subscriber",
            type: "address",
          },
        ],
        internalType: "struct PaymentRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validUntil",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "validAfter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentInterval",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "subscriber",
            type: "address",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "bool",
            name: "erc20TokensValid",
            type: "bool",
          },
          {
            internalType: "address",
            name: "erc20Token",
            type: "address",
          },
        ],
        internalType: "struct SubStorage",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_interval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_validUntil",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_erc20Token",
        type: "address",
      },
    ],
    name: "modifySubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "processPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
    ],
    name: "revokeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060016000556110e2806100256000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a706dce81161005b578063a706dce814610137578063b5792d7414610158578063bcad2b591461016b578063f15881b51461017e57600080fd5b80630cbebc241461008257806322081c121461010d5780637da2ba7c14610117575b600080fd5b610095610090366004610f34565b610191565b6040516101049190815181526020808301519082015260408083015190820152606080830151908201526080808301516001600160a01b039081169183019190915260a08084015182169083015260c08084015115159083015260e09283015116918101919091526101000190565b60405180910390f35b610115610262565b005b61012a610125366004610f34565b610549565b6040516101049190610f56565b61014a610145366004610f34565b6105ea565b604051908152602001610104565b610115610166366004610fb8565b610664565b610115610179366004610f34565b6108b1565b61011561018c366004610fb8565b610a1a565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101919091526101da610caa565b6001600160a01b0392831660009081526004918201602090815260409182902082516101008101845281548152600182015492810192909252600281015492820192909252600382015460608201529181015484166080830152600581015480851660a0840152600160a01b900460ff16151560c08301526006015490921660e08301525090565b61026a610cde565b6000610274610caa565b3360009081526004919091016020526040902060028101549091504210156102e35760405162461bcd60e51b815260206004820152601a60248201527f537562736372697074696f6e206e6f74207965742076616c696400000000000060448201526064015b60405180910390fd5b806001015442111561032e5760405162461bcd60e51b815260206004820152601460248201527314dd589cd8dc9a5c1d1a5bdb88195e1c1a5c995960621b60448201526064016102da565b60058101546001600160a01b0316331461039b5760405162461bcd60e51b815260206004820152602860248201527f4f6e6c792074686520696e69746961746f722063616e20696e697469617465206044820152677061796d656e747360c01b60648201526084016102da565b60006103a5610caa565b3360009081526005919091016020526040902080549091501561045a57805460009082906103d59060019061101e565b815481106103e5576103e5611031565b90600052602060002090600302019050826003015481600101546104099190611047565b4210156104585760405162461bcd60e51b815260206004820181905260248201527f5061796d656e7420696e74657276616c206e6f7420796574207265616368656460448201526064016102da565b505b610462610caa565b3360009081526005918201602090815260408083208151606081018352875481524281850190815260048901546001600160a01b039081169483019485528354600180820186559488529590962091516003909502909101938455519083015551600290910180546001600160a01b03191691909216179055820154600160a01b900460ff16156104fb576104f682610d37565b610504565b61050482610e86565b815460405190815233907f92f1df771c7cec67bc0415d3aa1069800df41023a71c65cf6e336b4ce75859b59060200160405180910390a250506105476001600055565b565b6060610553610caa565b6001600160a01b03831660009081526005919091016020908152604080832080548251818502810185019093528083529193909284015b828210156105df576000848152602090819020604080516060810182526003860290920180548352600180820154848601526002909101546001600160a01b031691830191909152908352909201910161058a565b505050509050919050565b6000806105f5610caa565b6001600160a01b038416600090815260059190910160205260408120805490925090036106255750600092915050565b805460009082906106389060019061101e565b8154811061064857610648611031565b6000918252602090912060016003909202010154949350505050565b600061066e610caa565b60010154600160501b90046001600160a01b03169050735ff137d4b0fdcd49dca30c7cf57e578a026d2789338114806106a657503330145b806106b95750336001600160a01b038316145b6106d55760405162461bcd60e51b81526004016102da9061105a565b604051806101000160405280878152602001858152602001428152602001868152602001306001600160a01b03168152602001886001600160a01b0316815260200160006001600160a01b0316856001600160a01b03161461073857600161073b565b60005b15158152602001846001600160a01b0316815250610757610caa565b6001600160a01b038981166000818152600493840160209081526040918290208651815590860151600182015585820151600282015560608601516003820155608086015181860180549186166001600160a01b031992831617905560a087015160058301805460c08a01511515600160a01b026001600160a81b03199091169288169290921791909117905560e090960151600690910180549185169190961617909455925163b7b60fa160e01b815230928101929092526024820189905260448201879052606482018890528516608482015263b7b60fa19060a401600060405180830381600087803b15801561084f57600080fd5b505af1158015610863573d6000803e3d6000fd5b50506040518881526001600160a01b038a1692503391507fea51daf94181a86e8bf97e15e706abd9e1b7314060766f6fda685052fb84af0b906020015b60405180910390a350505050505050565b60006108bb610caa565b60010154600160501b90046001600160a01b03169050735ff137d4b0fdcd49dca30c7cf57e578a026d2789338114806108f357503330145b806109065750336001600160a01b038316145b6109225760405162461bcd60e51b81526004016102da9061105a565b61092a610caa565b6001600160a01b0384166000818152600492830160205260408082208281556001810183905560028101839055600381019290925581840180546001600160a01b03199081169091556005830180546001600160a81b03191690556006909201805490921690915551630ba40a5560e31b8152309281019290925290635d2052a890602401600060405180830381600087803b1580156109c957600080fd5b505af11580156109dd573d6000803e3d6000fd5b50506040516001600160a01b03861692507f4a3e3a1f556c9d67f650b891dac6cbbbc3654e472fb4c2b049a15f8cbf21493a9150600090a2505050565b6000610a24610caa565b60010154600160501b90046001600160a01b03169050735ff137d4b0fdcd49dca30c7cf57e578a026d278933811480610a5c57503330145b80610a6f5750336001600160a01b038316145b610a8b5760405162461bcd60e51b81526004016102da9061105a565b60008611610adb5760405162461bcd60e51b815260206004820152601860248201527f537562736372697074696f6e20616d6f756e742069732030000000000000000060448201526064016102da565b604051806101000160405280878152602001858152602001428152602001868152602001306001600160a01b03168152602001886001600160a01b0316815260200160006001600160a01b0316856001600160a01b031614610b3e576001610b41565b60005b15158152602001846001600160a01b0316815250610b5d610caa565b6001600160a01b038981166000818152600493840160209081526040918290208651815590860151600182015585820151600282015560608601516003820155608086015181860180549186166001600160a01b031992831617905560a087015160058301805460c08a01511515600160a01b026001600160a81b03199091169288169290921791909117905560e090960151600690910180549185169190961617909455925163b7b60fa160e01b815230928101929092526024820189905260448201879052606482018890528516608482015263b7b60fa19060a401600060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b50506040518881526001600160a01b038a1692503391507fd4875bb105139b0ff13be26d89def72815fd7bbc4b160befe928ba20002c7e81906020016108a0565b600080610cd860017f439ffe7df606b78489639bc0b827913bd09e1246fa6802968a5b3694c53e0dd961101e565b92915050565b600260005403610d305760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102da565b6002600055565b60068101546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a0823190602401602060405180830381865afa158015610d86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610daa91906110a7565b8354909150811015610dfe5760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e7420746f6b656e2062616c616e636500000000000060448201526064016102da565b600583015483546040516323b872dd60e01b81523060048201526001600160a01b0392831660248201526044810191909152908316906323b872dd906064016020604051808303816000875af1158015610e5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8091906110c0565b50505050565b8054471015610ed75760405162461bcd60e51b815260206004820152601a60248201527f496e73756666696369656e742045746865722062616c616e636500000000000060448201526064016102da565b600581015481546040516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610f14573d6000803e3d6000fd5b5050565b80356001600160a01b0381168114610f2f57600080fd5b919050565b600060208284031215610f4657600080fd5b610f4f82610f18565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610fab5781518051855286810151878601528501516001600160a01b03168585015260609093019290850190600101610f73565b5091979650505050505050565b600080600080600060a08688031215610fd057600080fd5b610fd986610f18565b9450602086013593506040860135925060608601359150610ffc60808701610f18565b90509295509295909350565b634e487b7160e01b600052601160045260246000fd5b81810381811115610cd857610cd8611008565b634e487b7160e01b600052603260045260246000fd5b80820180821115610cd857610cd8611008565b6020808252602d908201527f6163636f756e743a206e6f742066726f6d20656e747279706f696e74206f722060408201526c37bbb732b91037b91039b2b63360991b606082015260800190565b6000602082840312156110b957600080fd5b5051919050565b6000602082840312156110d257600080fd5b81518015158114610f4f57600080fd";

type SubExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubExecutor__factory extends ContractFactory {
  constructor(...args: SubExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SubExecutor> {
    return super.deploy(overrides || {}) as Promise<SubExecutor>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SubExecutor {
    return super.attach(address) as SubExecutor;
  }
  override connect(signer: Signer): SubExecutor__factory {
    return super.connect(signer) as SubExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubExecutorInterface {
    return new utils.Interface(_abi) as SubExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubExecutor {
    return new Contract(address, _abi, signerOrProvider) as SubExecutor;
  }
}
